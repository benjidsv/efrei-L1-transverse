import pygame as pg
from math import pi, radians

# config
RES = WIDTH, HEIGHT = 1280, 720
MENU_FPS = 24
GAME_FPS = 60

# game settings
GOAL_WIDTH, GOAL_HEIGHT = 637, 212
GOAL_X, GOAL_Y, GOAL_Z = 321, 140, 482

GOALKEEPER_WIDTH, GOALKEEPER_HEIGHT = 45, 145
GOALKEEPER_START_X, GOALKEEPER_START_Y = WIDTH / 2 - GOALKEEPER_WIDTH/2, GOAL_Y + GOAL_HEIGHT - GOALKEEPER_HEIGHT
GOALKEEPER_SPEED = 6
GOALKEEPER_JUMP_SPEED_X, GOALKEEPER_JUMP_SPEED_Y = 520, 450#800, 200
GOALKEEPER_JUMP_ANGLE = radians(20)
GOALKEEPER_TURN_SPEED = 2.5

BALL_START_WIDTH, BALL_START_HEIGHT = 26, 26
BALL_START_X, BALL_START_Y, BALL_START_Z = WIDTH/2 - BALL_START_WIDTH/2, 490 - BALL_START_HEIGHT/2, 0
BALL_END_WIDTH, BALL_END_HEIGHT = 20, 20
BALL_DEPTH_TO_SIZE = (BALL_END_WIDTH - BALL_START_WIDTH) / GOAL_Z
BALL_DEPTH_TO_HEIGHT = (GOAL_Y + GOAL_HEIGHT - BALL_START_Y) / GOAL_Z
BALL_TARGET_IF_FLOOR_SHOT = GOAL_Y + GOAL_HEIGHT - BALL_END_HEIGHT * 2.4
BALL_TIME_S_TO_STRENTGH = 3
BALL_SPEED = 2.6
MAX_SHOOT_HOLD_TIME = 1
GRAVITY = 1000

FIELD_WIDTH, FIELD_HEIGHT = WIDTH, 416
FLOOR_LINE = pg.Vector3(0, GOAL_Y - BALL_START_Y + GOAL_HEIGHT, GOAL_Z - BALL_START_Z)

# labels
MS_TO_S = 0.001
PI_HALVES = pi/2
OPTIMAL_WIDTH_FACTOR = 0.01

# sprites
GOALKEEPER_SPRITE = pg.image.load("assets/goalkeeper.png")
BALL_SPRITE = pg.image.load("assets/ball.png")

# colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (65, 235, 90)
BLUE = (125, 210, 255)
PINK = (255, 100, 100)


